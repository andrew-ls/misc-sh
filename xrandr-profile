#!/bin/sh

# Copyright (c) 2018-2019 Andrew Steel <copyright@andrewsteel.net>
#
# SPDX-License-Identifier: GPL-3.0-only
#
# The GNU General Public License Version 3 only:
#
# This is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License Version 3
# as published by the Free Software Foundation.
#
# This software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# For the full license, see <https://www.gnu.org/licenses/>.

# xrandr-profile:
# Sets the XRandR scaling factor based on monitor profiles.

IFS="$(printf ' \t\n!')"; IFS="${IFS%!}"
export LC_ALL='C'

TEMP_DIR='/tmp/xrandr-profile'

unset -v \
	ACTION
unset -v \
	reset_scale \
	scale \
	toggle_dpi \
	toggle_scale
while test "${#}" -gt '0'; do
	case "${1}" in
		( '-r' \
		| '--r' \
		| '--re' \
		| '--res' \
		| '--rese' \
		| '--reset' \
		| '--reset-' \
		| '--reset-s' \
		| '--reset-sc' \
		| '--reset-sca' \
		| '--reset-scal' \
		| '--reset-scale' )
			reset_scale='TRUE'
			;;
		( '-s' \
		| '--s' \
		| '--sc' \
		| '--sca' \
		| '--scal' \
		| '--scale' )
			scale='TRUE'
			;;
		( '-t' \
		| '--t' \
		| '--to' \
		| '--tog' \
		| '--togg' \
		| '--toggl' \
		| '--toggle-' )
			printf '%s: %s: '\''%s'\'' '\''%s'\''\n' \
				'xrandr-profile' \
				'option '\'"${1}"\'' is ambiguous; possibilities' \
				'--toggle-dpi' \
				'--toggle-scale' \
				>&2
			exit 1
			;;
		( '--toggle-d' \
		| '--toggle-dp' \
		| '--toggle-dpi' )
			toggle_dpi='TRUE'
			;;
		( '--toggle-s' \
		| '--toggle-sc' \
		| '--toggle-sca' \
		| '--toggle-scal' \
		| '--toggle-scale' )
			toggle_scale='TRUE'
			;;
	esac
	shift
done
if test "${reset_scale}"; then
	ACTION='reset-scale'
elif test "${scale}"; then
	ACTION='scale'
elif test "${toggle_dpi}"; then
	ACTION='toggle-dpi'
elif test "${toggle_scale}"; then
	ACTION='toggle-scale'
fi

get_primary_display_id_dev() {(
	IFS="$(printf '\n!')"; IFS="${IFS%!}"

	printf '%s\n' "$(
		for DIR in $(
			find '/sys/devices' -type 'd' \
			| sort
		); do
			if \
				test -f "${DIR}"'/edid' \
				&& test "$(cat "${DIR}"'/enabled')" = 'enabled'
			then
				basename "$(printf '%s\n' "${DIR}")"
			fi
		done
	)" \
	| head -n '1'
)}

get_primary_display_id_xrandr() {(
	xrandr -q \
	| sed -n '
		s/^\([^[:space:]]\{1,\}\)[[:space:]]\{1,\}connected[[:space:]]\{1,\}primary[[:space:]]\{1,\}.*/\1/p;
	' \
	| sort \
	| head -n '1'
)}

get_display_manufacturer_model() {(
	DISPLAY_ID_DEV="${1:?}"
	< "$(
		find '/sys/devices' -type 'd' \
		| grep "${DISPLAY_ID_DEV}"'$' \
		| sort \
		| head -n '1'
	)"'/edid' \
	edid-decode \
	| grep '^Manufacturer:' \
	| cut -d ':' -f '2-' \
	| sed 's/\(.*\)Serial Number.*/\1/' \
	| sed '
		s/^[[:space:]]*//;
		s/[[:space:]]$//;
	'
)}

get_display_name() {(
	DISPLAY_ID_DEV="${1:?}"
	< "$(
		find '/sys/devices' -type 'd' \
		| grep "${DISPLAY_ID_DEV}"'$' \
		| sort \
		| head -n '1'
	)"'/edid' \
	edid-decode \
	| grep '^Monitor name:' \
	| cut -d ':' -f '2-' \
	| sed '
		s/^[[:space:]]*//;
		s/[[:space:]]$//;
	'
)}

mkdir -p "${TEMP_DIR}"
if test "${XDG_SESSION_TYPE}" = 'x11'; then

	DISPLAY_ID="$(get_primary_display_id_xrandr)"
	DISPLAY_NAME="$(get_display_name "$(get_primary_display_id_dev)")"
	if ! test "${DISPLAY_NAME}"; then
		DISPLAY_NAME="$(get_display_manufacturer_model "$(get_primary_display_id_dev)")"
	fi

	if test "${ACTION}" = 'toggle-dpi'; then
		if \
			test -f "${TEMP_DIR}"'/state' \
			&& test "$(cat "${TEMP_DIR}"'/state')" != 'scale'
		then
			ACTION='scale'
		else
			ACTION='dpi-96'
		fi
	fi

	if test "${ACTION}" = 'toggle-scale'; then
		if test -f "${TEMP_DIR}"'/state'; then
			ACTION='reset-scale'
		else
			ACTION='scale'
		fi
	fi

	DISPLAY_NAME_FRIENDLY="$(case "${DISPLAY_NAME}" in
		('LTM Model 3937') echo 'GPD Win 2' ;;
		('LGD Model 588') echo 'HP Spectre x360 13-ae003na' ;;
		('LG Ultra HD' | 'GSM Model 5b09') echo 'LG 27UD68P 4K Monitor' ;;
	esac)"
	case "${ACTION}" in

		('dpi-96')
			case "${DISPLAY_NAME_FRIENDLY}" in
				('HP Spectre x360 13-ae003na')
					xrandr --output "${DISPLAY_ID}" \
						--mode '1920x1080' \
						--scale '1x1'
					gsettings set \
						org.gnome.settings-daemon.plugins.xsettings overrides \
						'[{'\''Gdk/WindowScalingFactor'\'', <1>}]'
					echo 'dpi-96' > "${TEMP_DIR}"'/state'
					;;
				('LG 27UD68P 4K Monitor')
					xrandr --output "${DISPLAY_ID}" \
						--mode '2560x1440' \
						--scale '1x1'
					gsettings set \
						org.gnome.settings-daemon.plugins.xsettings overrides \
						'[{'\''Gdk/WindowScalingFactor'\'', <1>}]'
					echo 'dpi-96' > "${TEMP_DIR}"'/state'
					;;
			esac
			;;

		('reset-scale')
			xrandr --output "${DISPLAY_ID}" --scale '1x1'
			rm "${TEMP_DIR}"'/state'
			;;

		('scale')
			case "${DISPLAY_NAME_FRIENDLY}" in
				('GPD Win 2')
					xrandr --orientation 'right'
					;;
				('HP Spectre x360 13-ae003na')
					xrandr --output "${DISPLAY_ID}" \
						--mode '3840x2160' \
						--scale '1x1'
					gsettings set \
						org.gnome.settings-daemon.plugins.xsettings overrides \
						'[{'\''Gdk/WindowScalingFactor'\'', <2>}]'
					echo 'scale' > "${TEMP_DIR}"'/state'
					;;
				('LG 27UD68P 4K Monitor')
					xrandr --output "${DISPLAY_ID}" \
						--mode '3840x2160' \
						--scale '1.5x1.5'
					gsettings set \
						org.gnome.settings-daemon.plugins.xsettings overrides \
						'[{'\''Gdk/WindowScalingFactor'\'', <2>}]'
					echo 'scale' > "${TEMP_DIR}"'/state'
					;;
			esac
			;;

	esac

fi
